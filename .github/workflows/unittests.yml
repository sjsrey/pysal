 name: Unit Tests
 on:
   push:
     branches:
     - '*'
   pull_request:
     branches:
     - '*'
   schedule:
     - cron: '59 23 * * *'

 jobs:
   unittests:
     name: CI (${{ matrix.os }}-${{ matrix.environment-file }})
     runs-on: ${{ matrix.os }}
     continue-on-error: ${{ matrix.experimental }}
     timeout-minutes: 90
     strategy:
       matrix:
         os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
         environment-file: [ci/37.yml, ci/38.yml, ci/39.yml]
         experimental: [false]
     steps:
       - uses: actions/checkout@v2
       - uses: conda-incubator/setup-miniconda@v2
         with:
            miniconda-version: 'latest'
            auto-update-conda: true
            auto-activate-base: false
            environment-file: ${{ matrix.environment-file }}
            activate-environment: test
       - shell: bash -l {0}
         run: conda info --all
       - shell: bash -l {0}
         run: conda list
       - shell: bash -l {0}
         run: conda config --show-sources
       - shell: bash -l {0}
         run: conda config --show
       - shell: bash -l {0}
         run: pip install -e . --no-deps --force-reinstall
       - name: Pytest
         shell: bash -l {0}
         run: |
           pytest -v pysal --cov=pysal --cov-report=xml
       - name: codecov (${{ matrix.os }}, ${{ matrix.environment-file }})
         uses: codecov/codecov-action@v1
         with:
           token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
           name: pysal-codecov
